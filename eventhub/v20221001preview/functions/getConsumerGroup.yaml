$token: azure-native:eventhub/v20221001preview:getConsumerGroup
description: Gets a description for the specified consumer group.
inputs:
  properties:
    consumerGroupName:
      type: string
      description: The consumer group name
      willReplaceOnChanges: true
    eventHubName:
      type: string
      description: The Event Hub name
      willReplaceOnChanges: true
    namespaceName:
      type: string
      description: The Namespace name
      willReplaceOnChanges: true
    resourceGroupName:
      type: string
      description: Name of the resource group within the azure subscription.
      willReplaceOnChanges: true
  type: object
  required:
    - consumerGroupName
    - eventHubName
    - namespaceName
    - resourceGroupName
outputs:
  description: Single item in List or Get Consumer group operation
  properties:
    createdAt:
      type: string
      description: Exact time the message was created.
    id:
      type: string
      description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    location:
      type: string
      description: The geo-location where the resource lives
    name:
      type: string
      description: The name of the resource
    systemData:
      type: object
      $ref: "#/types/azure-native:eventhub/v20221001preview:SystemDataResponse"
      description: The system meta data relating to this resource.
    type:
      type: string
      description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
    updatedAt:
      type: string
      description: The exact time the message was updated.
    userMetadata:
      type: string
      description: User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
  type: object
  required:
    - createdAt
    - id
    - location
    - name
    - systemData
    - type
    - updatedAt
